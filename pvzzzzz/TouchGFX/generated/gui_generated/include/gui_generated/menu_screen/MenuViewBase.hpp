/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#ifndef MENUVIEWBASE_HPP
#define MENUVIEWBASE_HPP

#include <gui/common/FrontendApplication.hpp>
#include <mvp/View.hpp>
#include <gui/menu_screen/MenuPresenter.hpp>
#include <touchgfx/widgets/Box.hpp>
#include <touchgfx/widgets/Image.hpp>
#include <touchgfx/containers/buttons/Buttons.hpp>
#include <touchgfx/widgets/TextArea.hpp>
#include <touchgfx/widgets/TextAreaWithWildcard.hpp>
#include <touchgfx/containers/ModalWindow.hpp>

class MenuViewBase : public touchgfx::View<MenuPresenter>
{
public:
    MenuViewBase();
    virtual ~MenuViewBase();
    virtual void setupScreen();

    /*
     * Virtual Action Handlers
     */
    virtual void funcHelp()
    {
        // Override and implement this function in Menu
    }
    virtual void funcBack()
    {
        // Override and implement this function in Menu
    }

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
    }

    /*
     * Member Declarations
     */
    touchgfx::Box __background;
    touchgfx::Image Menu;
    touchgfx::ImageButtonStyle< touchgfx::ClickButtonTrigger >  StartButton;
    touchgfx::ImageButtonStyle< touchgfx::ClickButtonTrigger >  helpButton;
    touchgfx::ImageButtonStyle< touchgfx::ClickButtonTrigger >  chooseButton;
    touchgfx::ImageButtonStyle< touchgfx::ClickButtonTrigger >  quitButton;
    touchgfx::Image image1;
    touchgfx::TextArea textArea1;
    touchgfx::TextAreaWithOneWildcard text;
    touchgfx::ModalWindow modalWindowhelp;
    touchgfx::ImageButtonStyle< touchgfx::ClickButtonTrigger >  flexButton1;

    /*
     * Wildcard Buffers
     */
    static const uint16_t TEXT_SIZE = 10;
    touchgfx::Unicode::UnicodeChar textBuffer[TEXT_SIZE];

private:

    /*
     * Callback Declarations
     */
    touchgfx::Callback<MenuViewBase, const touchgfx::AbstractButtonContainer&> flexButtonCallback;

    /*
     * Callback Handler Declarations
     */
    void flexButtonCallbackHandler(const touchgfx::AbstractButtonContainer& src);

};

#endif // MENUVIEWBASE_HPP
