/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#include <gui_generated/backyard_screen/BackyardViewBase.hpp>
#include <touchgfx/Color.hpp>
#include <images/BitmapDatabase.hpp>
#include <texts/TextKeysAndLanguages.hpp>

BackyardViewBase::BackyardViewBase() :
    sliderValueChangedCallback(this, &BackyardViewBase::sliderValueChangedCallbackHandler),
    flexButtonCallback(this, &BackyardViewBase::flexButtonCallbackHandler),
    buttonCallback(this, &BackyardViewBase::buttonCallbackHandler)
{
    __background.setPosition(0, 0, 800, 480);
    __background.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    add(__background);

    map.setXY(0, 0);
    map.setBitmap(touchgfx::Bitmap(BITMAP_MAP02_ID));
    add(map);

    slider1.setXY(44, 42);
    slider1.setBitmaps(touchgfx::Bitmap(BITMAP_RAIL_ID), touchgfx::Bitmap(BITMAP_RAIL_ID), touchgfx::Bitmap(BITMAP_ALPHA_ID));
    slider1.setupVerticalSlider(4, 14, 6, 0, 347);
    slider1.setValueRange(0, 100);
    slider1.setValue(0);
    slider1.setNewValueCallback(sliderValueChangedCallback);
    add(slider1);

    text.setPosition(296, 157, 189, 73);
    text.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    text.setLinespacing(0);
    Unicode::snprintf(textBuffer, TEXT_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_F9VK).getText());
    text.setWildcard(textBuffer);
    text.setTypedText(touchgfx::TypedText(T___SINGLEUSE_SLY0));
    add(text);

    plant.setXY(47, 363);
    plant.setVisible(false);
    add(plant);

    car.setXY(48, 51);
    car.setVisible(false);
    add(car);

    bullet.setXY(120, 387);
    bullet.setVisible(false);
    add(bullet);

    zombie.setXY(809, 312);
    zombie.setVisible(false);
    add(zombie);

    flexButton1.setBoxWithBorderPosition(0, 0, 36, 37);
    flexButton1.setBorderSize(5);
    flexButton1.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(0, 102, 153), touchgfx::Color::getColorFromRGB(0, 153, 204), touchgfx::Color::getColorFromRGB(0, 51, 102), touchgfx::Color::getColorFromRGB(51, 102, 153));
    flexButton1.setBitmapXY(0, 0);
    flexButton1.setAlpha(0);
    flexButton1.setAction(flexButtonCallback);
    flexButton1.setPosition(764, -4, 36, 37);
    add(flexButton1);

    scalableImage2.setBitmap(touchgfx::Bitmap(BITMAP_ALMANAC_ZOMBIEWINDOW_ID));
    scalableImage2.setPosition(764, 0, 36, 33);
    scalableImage2.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
    add(scalableImage2);

    scalableImage1.setBitmap(touchgfx::Bitmap(BITMAP_ALMANAC_ZOMBIEWINDOW2_ID));
    scalableImage1.setPosition(764, 0, 36, 33);
    scalableImage1.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
    add(scalableImage1);

    scalableImage3.setBitmap(touchgfx::Bitmap(BITMAP_PAUSE_ID));
    scalableImage3.setPosition(763, -3, 39, 38);
    scalableImage3.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
    add(scalableImage3);

    slider2.setXY(564, 450);
    slider2.setBitmaps(touchgfx::Bitmap(BITMAP_FLAGMETER1_ID), touchgfx::Bitmap(BITMAP_FLAGMETER2_ID), touchgfx::Bitmap(BITMAP_FLAGMETERPARTS_ID));
    slider2.setupHorizontalSlider(8, 8, 0, 0, 145);
    slider2.setValueRange(0, 100);
    slider2.setValue(100);
    add(slider2);

    winButton.setBitmaps(Bitmap(BITMAP_TROPHY_ID), Bitmap(BITMAP_TROPHY_ID));
    winButton.setBitmapXY(0, 0);
    winButton.setVisible(false);
    winButton.setAction(flexButtonCallback);
    winButton.setPosition(444, 209, 83, 63);
    add(winButton);

    modalWindowgameover.setBackground(touchgfx::BitmapId(BITMAP_ZOMBIESWON_ID), 151, 21);
    modalWindowgameover.setShadeColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    modalWindowgameover.setShadeAlpha(150);
    modalWindowgameover.hide();
    flexButton2.setBoxWithBorderPosition(0, 0, 800, 480);
    flexButton2.setBorderSize(5);
    flexButton2.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(0, 102, 153), touchgfx::Color::getColorFromRGB(0, 153, 204), touchgfx::Color::getColorFromRGB(0, 51, 102), touchgfx::Color::getColorFromRGB(51, 102, 153));
    flexButton2.setAlpha(0);
    flexButton2.setAction(flexButtonCallback);
    flexButton2.setPosition(-151, -21, 800, 480);
    modalWindowgameover.add(flexButton2);

    add(modalWindowgameover);

    modalWindowPause.setBackground(touchgfx::BitmapId(BITMAP_OPTIONSMENUBACK32_ID), 194, -1);
    modalWindowPause.setShadeColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    modalWindowPause.setShadeAlpha(150);
    modalWindowPause.hide();
    buttonBack.setXY(93, 400);
    buttonBack.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_MEDIUM_ROUNDED_NORMAL_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_MEDIUM_ROUNDED_PRESSED_ID));
    buttonBack.setLabelText(touchgfx::TypedText(T___SINGLEUSE_2XBG));
    buttonBack.setLabelColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    buttonBack.setLabelColorPressed(touchgfx::Color::getColorFromRGB(255, 255, 255));
    buttonBack.setAlpha(0);
    buttonBack.setAction(buttonCallback);
    modalWindowPause.add(buttonBack);

    buttonBackMenu1.setXY(86, 173);
    buttonBackMenu1.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_MEDIUM_ROUNDED_NORMAL_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_MEDIUM_ROUNDED_PRESSED_ID));
    buttonBackMenu1.setAlpha(0);
    buttonBackMenu1.setAction(buttonCallback);
    modalWindowPause.add(buttonBackMenu1);

    image1.setXY(33, 381);
    image1.setBitmap(touchgfx::Bitmap(BITMAP_OPTIONS_BACKTOGAMEBUTTON0_ID));
    modalWindowPause.add(image1);

    scalableImage4.setBitmap(touchgfx::Bitmap(BITMAP_OPTIONS_BACKTOGAMEBUTTON0_ID));
    scalableImage4.setPosition(102, 166, 223, 65);
    scalableImage4.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
    modalWindowPause.add(scalableImage4);

    textContine.setPosition(112, 400, 203, 57);
    textContine.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    textContine.setLinespacing(0);
    textContine.setTypedText(touchgfx::TypedText(T___SINGLEUSE_AYV6));
    modalWindowPause.add(textContine);

    textBack.setPosition(126, 184, 174, 28);
    textBack.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    textBack.setLinespacing(0);
    textBack.setTypedText(touchgfx::TypedText(T___SINGLEUSE_3KLR));
    modalWindowPause.add(textBack);

    add(modalWindowPause);
}

BackyardViewBase::~BackyardViewBase()
{

}

void BackyardViewBase::setupScreen()
{
    plant.initialize();
    car.initialize();
    bullet.initialize();
    zombie.initialize();
}

void BackyardViewBase::sliderValueChangedCallbackHandler(const touchgfx::Slider& src, int value)
{
    if (&src == &slider1)
    {
        //Interaction1
        //When slider1 value changed call virtual function
        //Call functionMove
        functionMove(value);
    }
}

void BackyardViewBase::flexButtonCallbackHandler(const touchgfx::AbstractButtonContainer& src)
{
    if (&src == &flexButton1)
    {
        //Interaction2
        //When flexButton1 clicked call virtual function
        //Call funcChange
        funcChange();
    }
    if (&src == &flexButton2)
    {
        //Interaction5
        //When flexButton2 clicked change screen to Menu
        //Go to Menu with no screen transition
        application().gotoMenuScreenNoTransition();
        //Interaction6
        //When flexButton2 clicked call virtual function
        //Call funcRestart
        funcRestart();
    }
    if (&src == &winButton)
    {
        //Interaction8
        //When winButton clicked call virtual function
        //Call funcRestart
        funcRestart();
        //Interaction9
        //When winButton clicked change screen to ScreenWin
        //Go to ScreenWin with no screen transition
        application().gotoScreenWinScreenNoTransition();
    }
}

void BackyardViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
    if (&src == &buttonBack)
    {
        //Interaction3
        //When buttonBack clicked call virtual function
        //Call funcBack
        funcBack();
    }
    if (&src == &buttonBackMenu1)
    {
        //Interaction4
        //When buttonBackMenu1 clicked change screen to Menu
        //Go to Menu with no screen transition
        application().gotoMenuScreenNoTransition();
        //Interaction7
        //When buttonBackMenu1 clicked call virtual function
        //Call funcRestart
        funcRestart();
    }
}
